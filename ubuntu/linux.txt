  
  linux命令行整理
   
   ==========================================
   data    显示当前时间
   cal     显示日历
   
   who		查看当前登录的用户
   w		查看当前登录用户的详情
   df 		查看磁盘状态
   free 	查看内存状态
   
   clear    清屏
   history  查看命令历史

   echo $$  显示当前进程的PID

   bash     在当前shell中创建一个子shell
   ====================================
文件系统

   echo   把文本内容打印到标准输出
   cat	  将文本文件中的内容打印到标准输出     -b 
   pwd    显示当前目录
   cd	   改变目录
   	# cd ~   进入主目录
	# cd ~	userName  进入其它用户的目录
	# cd -  返回进入当前目录前的位置
   ls	   列出目录内容    -a -l

   file   查看文件类型,会显示字符集
   iconv -f gbk -t utf-8  chinese.txt	对gbk编码的chinese.txt转为utf-8编码，并输出到标准输出
		 -f 源文件的字符集；-t 要转化的字符集

   less   进入文件中查看文件内容
   more   一次一屏，分页显示。<space>查看下一屏，<b>查看上一屏幕   
   vi	  编辑文件
   
   cp	  复制文件和目录    -u
   
   mkdir  创建目录         -p
   rmdir  删除目录		   
   mv	  移动文件和目录 或重命名文件或目录
   rm	  删除文件或目录
   in	  创建硬链接或符号链接

   stat   显示指定文件的具体信息
============================================
网络配置：

	ifconfig   查看本机网络信息














=============================================
常备命令：
	sudo 	暂时使用root用户，需要自己的密码
	su		切换到root用户，需要root用户的密码

	chmod 644 fileName   修改文件的访问权限

	chown  

	printenv   查看所有环境变量
	set    	   查看所有shell变量和环境变量
	alias	   查看所有别名

	echo $XXX	查看变量内容


  =======================================
重定向：

	> 	将执行的结果标准输出到文件中(覆盖)
	>>  将执行的结果标准输出到文件中(不覆盖)
	<	改变标准输出
	&>  将标准错误和标准输出都重定向到同一个文件

	tee  从stdin读取数据，并同时输出到stdout和文件

	0>  标准输入     stdin默认是键盘
	1>	标准输出     stdout默认是显示器
	2>	标准错误	 stderr默认文件

	cat  不加参数时，表示将默认的标准输入写到标准输出
	
	>/dev/null   删除内容

	sort  对打印的内容进行排序

	uniq  报告文件中的重复行
	uniq -d   查看重复行

	wc   打印行数、字数、字节数

	grep  pattern file
	强大的文本搜索工具，使用正则表达式搜索匹配的行,如果没有指定，则默认从标准输入中查找。通常与管道结合使用

	head   输出文件前10行   -n 指定行数
	tail   输出文件后10行   -f 持续打印内容，常用于持续的日志记录
   ==========================================
命令的描述：   其后加命令
	
	type    查看该命令的类别
			(可执行程序、shell内置命令、shell函数、alias命令)
	
	whatis  显示该命令的描述
	which	查看该命令的位置

    help    显示命令的帮助信息
	man     以less的方式打开该命令的帮助文档

使用别名：alias。此类命令随着shell的关闭而消失
	alias foo='cd/usr;ls;cd -'
	alias name='foo'
   	可以自定义foo这个命令
	unalias	foo   删除foo这个自定义命令。

  ==========================================
文件颜色：  
  dircolors -p    查看缺省的颜色设置，可在环境变量$LS_COLORS上修改就行

	蓝色        表示目录；
    绿色		表示可执行文件；
	红色		表示压缩文件；
	浅蓝色		表示链接文件；
	灰色		表示其它文件；
	红色闪烁	表示链接的文件有问题了；
	黄色		是设备文件，包括block, char, fifo

==============================================
常用命令组合：

	ls -l $(which cp)  查看cp文件的详细信息   《命令替换》

	ls -d .[!.]?*    查看只有一个.的隐藏文件

	tail -f /var/log/messages   持续查看当前系统的日志

	echo "$USER $((2+2) $(data))"  
	双引号中只有变量扩展、算数扩展、命令替换等可以使用，其它的全部失效当做纯文本处理。但是	$ \ '  这三类字符不会被当成纯文本处理

	' ' 将所有的符号全部字符串化

==============================================
bash 快捷键(readline库)
	
   	ctrl l   清屏

	ctrl a   移动光标到命令行的行首
	ctrl e   移动光标到命令行行尾
	
	ctrl d   删除光标处的字符
	ctrl y   将缓冲区的文本粘贴到光标位置

	ctrl k   剪贴从光标到行尾的文本
	ctrl u   剪贴从光标到行首的文本
	
	<tab>	 自动补全($开头的变量名、@开头的主机名 )

	ctrl r   命令行变为逆向搜索模式
	ctrl j   将搜索到的命令粘贴在命令行上
	
	history  查看所有命令的历史记录

=================================================
多进程
	
	ps	显示与当前终端回话相关的所有进程的运行情况

	使用参数而不带连字符-时，命令会以"BSD模式"运行。ps命令的Linux版本可以模拟多种UNIX版本中的ps程序的运行方式，从而显示跟多的信息。
	ps x  显示所有的进程，而不需要关注它们是由哪个终端所控制

	ps aux   显示每个用户的进程信息

	ps -u userName   显示指定用户的当前进程

	top   显示当前所有进程的资源占用情况

	vmstat secend  按照间隔时间持续输出资源使用情况的快照 

	jobs  列出所有活动作业的状态信息,带有一个作业编号"jobs ID"

	xxx &  将xxx程序在后台运行

	bg %jobNum  将作业设置为后台运行 background
	fg %jobNum  将后台作业设置为前台运行 frontground

	kill [-singal] PID/%ID       终止信号为 -9
	发送信号到指定PID或指定作业编号的进程，默认的信号为TERM(terminal).
	只有进程的所有者或者root用户才能给进程发送信号。

	killall  发送信号给多个进程

	ctrl c  发送一个INT信号(interrupt)到指定PID的进程
	ctrl z  发送一个TSTP信号(Terminal Stop)到指定PID的进程
	
=========================================================
环境变量：
	有一些特殊的变量会被shell环境和操作系统保留，用来存储一些特别的值，shell变量和环境变量即为这类的变量
 	程序使用存储在环境中的数据来确定我们的相关设置。尽管大多数系统程序使用配置文件来存储程序设置，但也有一些程序会查找环境中存储的变量来调节自己的行为。而在shell回话调用环境期间，shell会存储大量的信息。
	shell在环境中存储了两种基本类型的数据，这两种变量分别是 环境变量、shell变量。
	shell变量是由bash存放的少量数据，又称本地变量，包括私有变量以及用户变量，不类的shell有不同的私有变量，bash,ksh,csh等，每种shell的私有变量都不一样
	环境变量又称用户变量，与shell无关
	
	env   显示当前用户的环境变量

	set   显示当前shell的所有本地设置的Shell变量

	unset  删除变量或函数

	export   将环境变量导出到其后要运行的程序中  -p 显示当前所有的环境变量
			   在shell中执行程序时，shell会提供一组环境变量。export可新增，修改或删除环境变量，供后续执行的程序使用。export的效力仅及于该次登陆操作

	source .bashrc   重新加载.bashrc这个配置文件

	ps1_new="$PS1"   新建一个ps1_new变量，并将PS1变量的值赋给它
					PS1变量用于定义提示符

=================================================

软件包管理：

	以下命令为RedHat系统，适用于RedHat、CentOS、Fedora等发行版，不使用于Debian类。
	注：package_name指的是软件包的实际名称，package_file是指包含该软件包的文件名


	yum search package_file   在yum库中搜索指定的文件名

	yum install package_name   安装软件包

	yum erase package_name   移除软件包

	yum update package_file  更新软件

	yum info package_name   显示软件包的信息

==============================================================
存储介质：
	挂载设备信息：device 'on' mount_point 'type' fileSystem_type (options)

	mount  查看目前已经挂在的文件系统列表

	umount  device  卸载指定的设备

	mount -t fileSystem_type device mount_point
	将设备按照指定的文件系统格式挂载到指定挂载点上

	fdisk   对设备进行磁盘分区

	mkfs    创建新的文件系统

	dd    转移设备数据

=======================================================
网络操作：

	ping 向网络主机发送ICMP ECHO_REQUEST数据包

	traceroute  追踪数据包到网络主机的路由路径

	netstat  查看网络连接、路由表、网络接口数据、伪连接、多点传送成员等信息

	curl   一个利用URL规则在命令行下工作的文件传输工具。它支持文件的上传和下载，所以是综合传输工具，但按传统，习惯称url为下载工具。

	wget url   下载指定资源 



========================================================
文件搜索：

	locate  Xxx  搜索文件路劲带有Xxx的文件
	如果没有该程序则安装，目前常见的衍生体有slocate、mlocate。使用该命令时若报错，应当先更新文件数据库

	updatedb   更新文件数据库，需要root权限

*
*	find path -option [-print] [-exec -ok command] {}  高级查找命令
*

    find ~ -name ab* -o -name ac*   查找主目录下以ab和ac开头的文件

	find /tmp -name wa* -type l   在/tmp下查找名为wa开头且类型为符号链接的文件

	find /home -mtime -2    在/home下查最近两天内改动过的文件

	find /home -mmin +60   在/home下查60分钟前改动过的文件

	find /home -user lm    列出/home目录内属于用户lm的文件或目录

	find /home -empty       查找大小为0的文件或空目录
	
	find /home -size +512k     查大于512k的文件
	
	find w -type d -print -exec ls {} \;   查找目录并为找到的每一个目录单独执行ls 命令。-print用于在每个文件列表前一行显示目录名称

	find ~ -name test -print -exec cat {} \;   查找文件名为test的文件并打印文件内容

=============================================================
Linux正则表达式：

	格式：  grep [options] regex [file]
	用于搜索file文本文件中与regex正则表达式匹配的行，并将结果输出至标准输出,option用于指定参数。
	或  COMMAND | grep 'regex'  对标准输出的文本内容进行正则匹配

    Linux正则表达式中的元字符： ^ $ . [ ] { } - ？ * + ( ) | \ 其它字符被称为文字字符

	.    在对应位置匹配任意字符，可以为空，必须有字符！

	^/$  正则表达式只与行的开头或结尾匹配

	[ ]  用于创建一个字符集，在匹配时只需要匹配其中任意一个字符即可

*	[^ ]  否定字符，^失去原有意义，而表示要匹配的字符不得存在[ ]中任意字符。 ^ 必须是[ ]中的第一个字符才可以，否则失去该含义，只表示一个普通的           字符

	'Reg1 | Reg2'  竖杠 | 表示匹配正则表达式 Reg1 或者Reg2    grep -E

	( )   将( )内的正则部分看成一个整体，以便与其它正则表达式一起使用

	?    匹配前一个元素1次或0次
	*    匹配前一个元素0次或多次
	+    匹配前一个元素1次或多次
	{ }  指定次数匹配前一个元素


	^$   匹配成空行	
	.*   匹配任意内容

=======================================================================
编译源程序：

	tar zxvf  Xxx.tar.gz         解压文件包
	cd Xxx                          
	make                         编译程序         
	cd src && make install        进入src文件中进行安装

	ps -ef | grep Xxx     查看指定的Xxx相关的进程	
    netstat -tunpl | grep 6379   查看指定端口号的进程
