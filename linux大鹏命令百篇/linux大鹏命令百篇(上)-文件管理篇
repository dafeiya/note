在linux系统中，rm命令删除文件实际上只是减少了文件的link数，而linux系统规定，只有当link数减为0时，文件才会真正从磁盘上移除。另外，当进程打开了某个文件时，这个文件的link数就会加1.

=================================================================================================
一.shell基础及工具篇
	1.环境变量：
		export、env、set、declare四个命令都与环境变了有关
		shell的变量可以分为"环境变量"和"自定义变量"两种类型，两者的区别在于作用范围不同，环境变量可以在其进程的子进程中继续有效，而自定义变量的作用范围则无法延伸到其进程的子进程中。
		环境变量的命令比较:
			env:		显示当前用户的环境变量，但不会显示其自定义变量。
			export:		功能同env一样，也是显示当前用户的环境变量，只不过该命令的输出是按照变量名进行排序的。
			declare:	显示当前shell中定义的所有变量，包括用户的环境变量和自定义变量，该命令的输出按变量名进行排序
			set:		功能同declare一样，显示当前Shell中定义的所有变量，包括用户的环境变量和自定义变量
		env和export显示的是环境变量，环境变量可以在其进程及其子进程中继续有效
		set和declare显示的是环境变量和自定义变量。set和declare的输出几乎是一样的，唯一的区别是"下划线变量"。下划线变量(_)表示用户上一次输入的命令的最后一个参数。上面两个命令之所以出现不同，是因为在执行set前执行了clear命令，而在执行declare之前，执行了set命令
		
		PATH变量
			echo $PATH
			/home/limeng/bin:/home/limeng/.local/bin:/home/limeng/software/jdk/jdk1.8.0_191/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local
			用好PATH变量可以大大提升工作效率，
			export PATH=$PATH:/home/limeng/tools	追加自己的路径到$PATH变量中去，这样使用tools中的应用时就不需要指定全路径了
	
	2.read,倾听是种美德
		read用于倾听标准输入或文件输入，并把信息存放到变量中
		read可以倾听键盘输入，并将输入内容保存到变量中
			read name echo "hello $name"
		read可以接受多个参数，如果输入的数据量少于变量个数，那么多余的变量不会获取到数据，即变量值为空。如果输入的数据数量多余变量的个数，那么超出的数据将赋值给最后一个变量。
			read name1 name2  echo "hello $name1 $name2"
		如果read命令后面没有写任何变量，那么脚本执行时输入的数据会自动存放到$REPLY环境变量中去

		文件解析：
			cat test.txt | while read line
			do
				...
			done	
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	-t 3		设置3秒的等待超时
	-p 'msg'	设置提示信息
	-s			输入时的内容不会显示出来，可用作密码输入

	
		






		
			
		
		




























